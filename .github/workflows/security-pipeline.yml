name: Pipeline de Seguran칞a DevSecOps Unificado

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # Job 1: Build e Testes Unit치rios
  build-and-test:
    name: 1. Build e Testes Unit치rios
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read

    steps:
      - name: Checkout do c칩digo
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Instalar depend칡ncias Python
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov PyJWT

      - name: Inicializar banco SQLite
        run: python -c "from app import init_db; init_db()"

      - name: Rodar testes unit치rios com pytest
        run: |
          mkdir -p reports
          pytest tests/ --maxfail=1 --disable-warnings -v | tee reports/pytest.log

  # Job 2: SCA com Snyk
  snyk-scan:
    name: 2. An치lise de Depend칡ncias (SCA)
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout do c칩digo
        uses: actions/checkout@v3

      - name: Instalar Snyk
        run: npm install -g snyk

      - name: Executar Snyk
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk test --severity-threshold=high --fail-on=all

  # Job 3: SAST com CodeQL
  codeql-scan:
    name: 3. An치lise Est치tica (SAST)
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout do c칩digo
        uses: actions/checkout@v3

      - name: Inicializar CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python

      - name: Executar an치lise CodeQL
        uses: github/codeql-action/analyze@v3
        env:
          CODEQL_FAIL_ON_ALERT: "true"

  # Job 4: DAST com Flask e OWASP ZAP CLI
  dast-scan:
    name: 4. An치lise Din칙mica (DAST)
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout do c칩digo
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Instalar depend칡ncias Python
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Iniciar servidor Flask em background
        run: |
          nohup python app.py &> reports/flask.log &
          for i in {1..30}; do
            curl -f http://127.0.0.1:5000/ && break || sleep 2
          done

      - name: Instalar OWASP ZAP CLI
        run: sudo apt-get update && sudo apt-get install -y zaproxy

      - name: Executar DAST com OWASP ZAP
        run: |
          mkdir -p reports
          zap-baseline.py -t http://127.0.0.1:5000 -r reports/zap_report.html -l FAIL

      - name: Upload do Relat칩rio DAST
        uses: actions/upload-artifact@v4
        with:
          name: Relatorio-DAST-ZAP
          path: reports/zap_report.html

  # Job 5: Notifica칞칚o no Slack em caso de falha
  notification-on-failure:
    name: 5. Notificar Falha
    runs-on: ubuntu-latest
    if: failure()
    needs: [build-and-test, snyk-scan, codeql-scan, dast-scan]

    steps:
      - name: Enviar notifica칞칚o para o Slack
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_TITLE: "游뚿 Falha no Pipeline de Seguran칞a!"
          SLACK_MESSAGE: "O pipeline no reposit칩rio ${{ github.repository }} falhou. Verifique os logs para mais detalhes."
          SLACK_COLOR: "danger"
          MSG_MINIMAL: true
