# VERSÃO FINAL COM DEPENDÊNCIAS CORRIGIDAS

name: Pipeline de Segurança Completo

on:
  push:
    branches: [ "main", "master" ]
  workflow_dispatch:

jobs:
  codeql-analysis:
    name: Scan SAST com CodeQL
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: github/codeql-action/init@v3
        with:
          languages: python
      - uses: github/codeql-action/analyze@v3
        with:
          category: "/language/python"

  sca-snyk-scan:
    name: Scan SCA com Snyk
    runs-on: ubuntu-latest
    needs: codeql-analysis
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - run: pip install -r requirements.txt
      - name: Executar Snyk para encontrar e monitorar vulnerabilidades
        uses: snyk/actions/python@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor
          args: --all-projects

  dast-zap-scan:
    name: Scan DAST com OWASP ZAP
    runs-on: ubuntu-latest
    needs: codeql-analysis
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      # CORREÇÃO: Usa o requirements.txt para garantir consistência
      - name: Instalar dependências do projeto
        run: pip install -r requirements.txt
      - name: Dar permissão de escrita para a pasta de trabalho
        run: chmod -R 777 .
      - name: Iniciar aplicação Flask e aguardar
        run: |
          echo "Iniciando servidor Flask..."
          python app.py &
          echo "Aguardando o servidor ficar pronto na porta 5000..."
          timeout 30s bash -c 'until curl -s http://localhost:5000 > /dev/null; do echo "Aguardando..." && sleep 1; done'
          echo "Servidor está pronto!"
      - name: Executar Scan DAST com ZAP via Docker
        run: |
          docker run \
            --network=host \
            -v $(pwd):/zap/wrk/:rw \
            --workdir /zap/wrk \
            ghcr.io/zaproxy/zaproxy:stable \
            zap-baseline.py -t http://localhost:5000 -r dast-report.html || true
      - name: Exibir o relatório DAST no log
        if: always()
        run: |
          echo "----------------- INÍCIO DO RELATÓRIO DAST -----------------"
          cat dast-report.html
          echo "------------------ FIM DO RELATÓRIO DAST -------------------"