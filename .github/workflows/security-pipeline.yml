name: Pipeline de Seguran√ßa DevSecOps Unificado

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Job 1: An√°lise Est√°tica e de Depend√™ncias
  build-and-scan:
    name: 1. Build, SCA e SAST
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read

    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Setup Python e Instalar Depend√™ncias
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - run: pip install -r requirements.txt

      - name: Executar An√°lise de Depend√™ncias (SCA) com Snyk
        uses: snyk/actions/python-3.9@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          # Quality Gate: Falha se encontrar vulnerabilidades de severidade 'high' ou 'critical'
          args: --severity-threshold=high

      - name: Inicializar o CodeQL (SAST)
        uses: github/codeql-action/init@v3
        with:
          languages: python

      - name: Executar a an√°lise do CodeQL (SAST)
        uses: github/codeql-action/analyze@v3

  # Job 2: An√°lise Din√¢mica
  dynamic-analysis:
    name: 2. An√°lise Din√¢mica (DAST)
    runs-on: ubuntu-latest
    needs: build-and-scan

    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v3

      - name: Executar An√°lise Din√¢mica (DAST) com OWASP ZAP
        uses: zaproxy/action-baseline@v0.10.0
        with:
          # Quality Gate: Falha para alertas de n√≠vel 'WARN' (M√©dio) ou superior
          cmd_options: '-r zap_report.html -l WARN'
          target: 'https://www.zaproxy.org/'

      - name: Upload do Relat√≥rio DAST
        uses: actions/upload-artifact@v3
        with:
          name: Relatorio-DAST-ZAP
          path: zap_report.html

  # Job 3: Notifica√ß√£o em caso de falha
  notification-on-failure:
    name: 3. Notificar Falha
    runs-on: ubuntu-latest
    if: failure()
    needs: [build-and-scan, dynamic-analysis]

    steps:
      - name: Enviar notifica√ß√£o para o Slack
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_TITLE: 'üö® Falha no Pipeline de Seguran√ßa!'
          SLACK_MESSAGE: 'O pipeline no reposit√≥rio ${{ github.repository }} falhou. Verifique os logs para mais detalhes.'
          SLACK_COLOR: 'danger'
          MSG_MINIMAL: true