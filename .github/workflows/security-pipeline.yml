name: Pipeline de Segurança (SAST e DAST)

on:
  push:
    branches: [ "main", "master" ]
  workflow_dispatch:

jobs:
  codeql-analysis:
    name: Scan SAST com CodeQL
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4
      - name: Inicializar CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python
      - name: Executar análise do CodeQL
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:python"

  dast-zap-scan:
    name: Scan DAST com OWASP ZAP
    runs-on: ubuntu-latest
    needs: codeql-analysis 
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4
      - name: Configurar ambiente Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Instalar dependências do projeto
        run: pip install -r requirements.txt
      - name: Iniciar aplicação Flask em background
        run: |
          echo "Iniciando servidor Flask na porta 5000..."
          python app.py &
          echo "Aguardando 10 segundos para o servidor iniciar completamente..."
          sleep 10
      - name: Dar permissão de escrita para o ZAP
        run: |
          chmod -R 777 .
      - name: Executar OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.11.0
        with:
          # O ZAP ainda vai tentar criar issue e falhar, mas o if:always() abaixo garante que continuaremos
          target: 'http://localhost:5000'
          cmd_options: '-r dast-report.html'
      
      # --- NOVA ETAPA FINAL ---
      # Removemos o upload e o commit, e apenas exibimos o arquivo.
      - name: Exibir o relatório DAST no log
        if: always() # Garante que este passo sempre rode, mesmo que o anterior falhe
        run: |
          echo "----------------- INÍCIO DO RELATÓRIO DAST -----------------"
          # O comando 'cat' lê o conteúdo do arquivo e o imprime na tela (no log)
          cat dast-report.html
          echo "------------------ FIM DO RELATÓRIO DAST -------------------"