# VERSÃO FINAL COM SAST, DAST E SCA

name: Pipeline de Segurança Completo

on:
  push:
    branches: [ "main", "master" ]
  workflow_dispatch:

jobs:
  # JOB 1: ANÁLISE ESTÁTICA (SAST)
  codeql-analysis:
    name: Scan SAST com CodeQL
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4
      - name: Inicializar CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python
      - name: Executar análise do CodeQL
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language/python"

  # JOB 2: ANÁLISE DE DEPENDÊNCIAS (SCA)
  sca-snyk-scan:
    name: Scan SCA com Snyk
    runs-on: ubuntu-latest
    needs: codeql-analysis # Roda após o SAST
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar ambiente Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Instalar dependências do projeto
        run: pip install -r requirements.txt
      
      - name: Executar Snyk para encontrar vulnerabilidades
        uses: snyk/actions/python@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: test
          args: --all-projects --severity-threshold=high

  # JOB 3: ANÁLISE DINÂMICA (DAST)
  dast-zap-scan:
    name: Scan DAST com OWASP ZAP
    runs-on: ubuntu-latest
    needs: codeql-analysis
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4
      - name: Configurar ambiente Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Instalar dependências do projeto
        run: pip install -r requirements.txt
      - name: Iniciar aplicação Flask em background
        run: |
          echo "Iniciando servidor Flask na porta 5000..."
          python app.py &
          echo "Aguardando 15 segundos para o servidor iniciar completamente..."
          sleep 15
      
      - name: Dar permissão de escrita para o ZAP
        run: |
          chmod -R 777 .

      - name: Executar Scan DAST com ZAP via Docker
        run: |
          docker run \
            --network=host \
            -v $(pwd):/zap/wrk/:rw \
            --workdir /zap/wrk \
            ghcr.io/zaproxy/zaproxy:stable \
            zap-baseline.py -t http://localhost:5000 -r dast-report.html || true
      
      - name: Exibir o relatório DAST no log
        if: always()
        run: |
          echo "----------------- INÍCIO DO RELATÓRIO DAST -----------------"
          cat dast-report.html
          echo "------------------ FIM DO RELATÓRIO DAST -------------------"